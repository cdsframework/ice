/**
 * Copyright (C) 2023 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */

package knowledgeModule.gov.nyc.cir.ice

import java.util.List
import java.util.Set
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICEFactTypeFinding
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.RecommendationStatus
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.supportingdatatmp.SupportedFactConcept
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine

global java.util.Date evalTime

expander ../../knowledgeCommon/org.cdsframework.ice/org.cdsframework^ICE^1.0.0.dsl


 
/*************************************************************************************************************************************************************************************
If the patient has completed the primary DTP series (3-dose or 5-dose) but has not received a dose of pertussis at >= 7 years, then an adolescent Tdap (CVX 115) is needed.
/************************************************************************************************************************************************************************************/
rule "DTP(Any): Mark that dose of pertussis has not been administered for a shot if the shot is not valid"
	agenda-group "customAnyRuleflowGroupRule"
	auto-focus true
	dialect "mvel"
	when
		There is an administered shot $shot
			- that has already been evaluated and whose shot validity status is not VALID
			- make note of all evaluation reasons for this shot as $collectionOfStrReasons
			- the collection $collectionOfStrReasons does not contain "EVALUATION_REASON_CONCEPT.D_AND_T_INVALID/P_VALID"
		There is an IceFact $iceFactFinding 
			- that has finding SupportedFactConcept._DOSE_OF_PERTUSSIS.conceptCodeValue
			- that has associated administered shot $shot
	then
		Retract IceFact $iceFactFinding from Working Memory
		Log that this Dose Rule fired for the dose $shot
end


rule "DTP(Any): Note that an Adolescent Tdap is needed if primary series complete and patient has _not_ received the necessary adolescent Tdap doses"
	agenda-group "customAnyRuleflowGroupRule"
	auto-focus true
	dialect "mvel"
	when
		There is a Series $targetSeries
			- the series belongs to the vaccine group "VACCINE_GROUP_CONCEPT.200"
			- the series is complete
		There does not exist an IceFact
			- that has finding SupportedFactConcept._ADOLESCENT_TDAP_COMPLETED.conceptCodeValue
			- that has associated series $targetSeries
		There does not exist an IceFact
			- that has finding SupportedFactConcept._DOSE_OF_ADOLESCENT_TDAP_NEEDED.conceptCodeValue
			- that has associated series $targetSeries
	then
		Insert an IceFact SupportedFactConcept._DOSE_OF_ADOLESCENT_TDAP_NEEDED.getConceptCodeValue() with TargetSeries $targetSeries into Working Memory
		Log that this Series Rule fired for the Series $targetSeries
end


rule "DTP(Any): Retract Tdap needed if patient has received his/her Adolescent Tdap dose(s)"
	agenda-group "customAnyRuleflowGroupRule"
	auto-focus true
	dialect "mvel"
	when
		There is a Series $targetSeries
			- the series belongs to the vaccine group "VACCINE_GROUP_CONCEPT.200"
		There exists an IceFact
			- that has finding SupportedFactConcept._ADOLESCENT_TDAP_COMPLETED.conceptCodeValue
			- that has associated series $targetSeries
		There is an IceFact $iceTdapFact
			- that has finding SupportedFactConcept._DOSE_OF_ADOLESCENT_TDAP_NEEDED.conceptCodeValue
			- that has associated series $targetSeries
	then
		Retract IceFact $iceTdapFact from Working Memory
		Log that this Series Rule fired for the Series $targetSeries
end


rule "DTP(Any): Retract Tdap needed if primary DTP series not complete"
	agenda-group "customAnyRuleflowGroupRule"
	auto-focus true
	dialect "mvel"
	when
		There is a Series $targetSeries
			- the series belongs to the vaccine group "VACCINE_GROUP_CONCEPT.200"
			- the series is not complete
		There is an IceFact $iceTdapFact
			- that has finding SupportedFactConcept._DOSE_OF_ADOLESCENT_TDAP_NEEDED.conceptCodeValue
			- that has associated series $targetSeries
	then
		Retract IceFact $iceTdapFact from Working Memory
		Log that this Series Rule fired for the Series $targetSeries
end


/*************************************************************************************************************************************************************************************
An adolescent Tdap (CVX 115) is needed END
/************************************************************************************************************************************************************************************/

