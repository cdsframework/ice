/**
 * Copyright (C) 2023 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */

package knowledgeModule.gov.nyc.cir.ice

import java.util.Date
import org.opencds.vmr.v1_0.internal.datatypes.CD
import org.opencds.vmr.v1_0.internal.EvalTime
import org.cdsframework.ice.service.DiseaseImmunity
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.RecommendationStatus
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType

global java.util.Date evalTime

expander ../../knowledgeCommon/org.cdsframework.ice/org.cdsframework^ICE^1.0.0.dsl

// If a patient is >=105 days (15 weeks or older) and has not received any valid doses of rotavirus vaccine, then rotavirus is not recommended, the reason is 
// Too_Old (display text: "Not recommended at this age"). Overrides routine recommendationAgeCheck
rule "Rotavirus: Not Recommended When >= 105 days and No Valid Shots"
	agenda-group "RecommendationForecast^customRecommendationRule"
	activation-group "recommendationAgeCheck"
    when
        There is a Series $targetSeries that needs forecasting
        	- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.820"
        	- the Series is not complete
        	- the effective dose number in the Series is == 1
        The patient information $oEvaluatedPerson must be known to complete writing this rule
        	- make note of the Patient's birthdate as $dtBirthDate
       	Confirm elapsed time between $dtBirthDate and evalTime >= "105d"
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.NOT_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.TOO_OLD_TO_INITIATE"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end

// If the patient is currently >8 months, 0 days, or will be >8 months, 0 days __as of the recommended date due__, then rotavirus is not recommended, and the reason is Too_Old 
// (display text: "Not recommended at this age").
rule "Rotavirus: Series is Complete if Over 8 Years of Age or Will Be as of the Routine Recommendation Date"
	agenda-group "RecommendationForecast^postCustomRecommendationCheck"
	when
		There is a Series $targetSeries
			- a forecast for the Series has been made and a recommendation date has been determined
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.820"
			- make note of the recommendation date as $recommendationDate
			- post processing on the Series forecast has not already been run
		The Patient information $patientInfo must be known to complete writing this rule
			- make note of the Patient's birthdate as $birthDate
		Confirm elapsed time between $birthDate and evalTime > "8m0d" || elapsed time between $birthDate and $recommendationDate > "8m0d"
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.NOT_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.TOO_OLD"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end

