substitutions:
  _CONTAINER_NAME: ice
  _GCR_HOSTNAME: gcr.io
  _GCS_CACHE_BUCKET: ice-mvn-cache
  _GCP_VM_HOSTNAME: ice-01-redux

steps:
  # load the cache from GCS if it exists
  - name: gcr.io/cloud-builders/gsutil
    dir: /root
    entrypoint: bash
    args:
      - -c
      - |
        (
          gsutil cp gs://${_GCS_CACHE_BUCKET}/m2-cache.tar.gz /tmp/m2-cache.tar.gz &&
          tar -xzf /tmp/m2-cache.tar.gz
          rm -rf /root/.m2/repository/org/cdsframework/opencds-rest-service/
        ) || echo 'Cache not found'
    volumes:
      - name: m2
        path: /root/.m2/

  - name: gcr.io/cloud-builders/git
    args: ["fetch", "--unshallow"]

  # build opencds dep first
  - name: "maven:3-openjdk-17-slim"
    entrypoint: "mvn"
    args:
      [
        "-DskipTests",
        "-DskipITs",
        "-Dmaven.compiler.release=17",
        "install",
      ]
    dir: "opencds"
    volumes:
      - name: "m2"
        path: /root/.m2

  # build main project
  - name: "maven:3-openjdk-17-slim"
    entrypoint: "mvn"
    args:
      [
        "-DskipTests",
        "-DskipITs",
        "-Dmaven.compiler.release=17",
        "install",
      ]
    dir: "."
    volumes:
      - name: "m2"
        path: /root/.m2

  # build the rules packager
  - name: "maven:3-openjdk-17-slim"
    id: build
    entrypoint: "mvn"
    args:
      [
        "-Dmaven.compiler.release=17",
        "compile",
        "assembly:single",
      ]
    dir: "rules-packager"
    volumes:
      - name: "m2"
        path: /root/.m2

  # produce the compiled pkg for ice
  #- name: "maven:3-jdk-8-slim"
  #  entrypoint: "java"
  #  args:
  #    [
  #      "-jar",
  #      "rules-packager/target/rules-packager-1.0.0-SNAPSHOT-jar-with-dependencies.jar",
  #      ".gcp.config/ice-gen.properties",
  #      "gov.nyc.cir^ICE^1.0.0",
  #      "org.cdsframework^ICE^1.0.0",
  #    ]
  #  dir: "."
  #  volumes:
  #    - name: m2
  #      path: /root/.m2/

  # cache the /root/.m2 folder and upload it to GCS bucket
  - name: gcr.io/cloud-builders/gsutil
    waitFor:
      - build
    dir: /root
    entrypoint: bash
    args:
      - -c
      - |
        tar -czf /tmp/m2-cache.tar.gz .m2 &&
        gsutil cp /tmp/m2-cache.tar.gz gs://${_GCS_CACHE_BUCKET}/m2-cache.tar.gz
    volumes:
      - name: m2
        path: /root/.m2/

  # build the docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "--tag=${_GCR_HOSTNAME}/${PROJECT_ID}/${_CONTAINER_NAME}:$BRANCH_NAME",
        "--tag=${_GCR_HOSTNAME}/${PROJECT_ID}/${_CONTAINER_NAME}:$SHORT_SHA",
        "-f",
        ".gcp.config/Dockerfile",
        ".",
      ]
    dir: "."

  - name: "gcr.io/cloud-builders/docker"
    id: docker-push
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker push ${_GCR_HOSTNAME}/${PROJECT_ID}/${_CONTAINER_NAME}:$BRANCH_NAME
        docker push ${_GCR_HOSTNAME}/${PROJECT_ID}/${_CONTAINER_NAME}:$SHORT_SHA

  # stop the vm instance
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "compute",
        "instances",
        "stop",
        "${_GCP_VM_HOSTNAME}",
        "--zone",
        "us-central1-c",
        "--project",
        "${PROJECT_ID}",
      ]

  # update the vm instance image
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "compute",
        "instances",
        "update-container",
        "${_GCP_VM_HOSTNAME}",
        "--zone",
        "us-central1-c",
        "--project",
        "${PROJECT_ID}",
        "--container-image=${_GCR_HOSTNAME}/${PROJECT_ID}/${_CONTAINER_NAME}:${SHORT_SHA}",
      ]

  # start the vm instance
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "compute",
        "instances",
        "start",
        "${_GCP_VM_HOSTNAME}",
        "--zone",
        "us-central1-c",
        "--project",
        "${PROJECT_ID}",
      ]

timeout: 900s
