/*
 * Copyright 2011-2020 OpenCDS.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.omg.dss;

import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.9
 * Thu Jul 28 08:04:45 MDT 2011
 * Generated source version: 2.2.9
 *
 */


@WebServiceClient(name = "DecisionSupportService",
                  targetNamespace = "http://www.omg.org/spec/CDSS/201105/dssWsdl")
public class DecisionSupportService extends Service {

    public final static QName SERVICE = new QName("http://www.omg.org/spec/CDSS/201105/dssWsdl", "DecisionSupportService");
    public final static QName Evaluate = new QName("http://www.omg.org/spec/CDSS/201105/dssWsdl", "evaluate");
    public final static QName Query = new QName("http://www.omg.org/spec/CDSS/201105/dssWsdl", "query");
    public final static QName Metadata = new QName("http://www.omg.org/spec/CDSS/201105/dssWsdl", "metadata");

    public DecisionSupportService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DecisionSupportService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }


    /**
     *
     * @return
     *     returns Evaluation
     */
    @WebEndpoint(name = "evaluate")
    public Evaluation getEvaluate() {
        return super.getPort(Evaluate, Evaluation.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Evaluation
     */
    @WebEndpoint(name = "evaluate")
    public Evaluation getEvaluate(WebServiceFeature... features) {
        return super.getPort(Evaluate, Evaluation.class, features);
    }
    /**
     *
     * @return
     *     returns Query
     */
    @WebEndpoint(name = "query")
    public Query getQuery() {
        return super.getPort(Query, Query.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Query
     */
    @WebEndpoint(name = "query")
    public Query getQuery(WebServiceFeature... features) {
        return super.getPort(Query, Query.class, features);
    }
    /**
     *
     * @return
     *     returns MetadataDiscovery
     */
    @WebEndpoint(name = "metadata")
    public MetadataDiscovery getMetadata() {
        return super.getPort(Metadata, MetadataDiscovery.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MetadataDiscovery
     */
    @WebEndpoint(name = "metadata")
    public MetadataDiscovery getMetadata(WebServiceFeature... features) {
        return super.getPort(Metadata, MetadataDiscovery.class, features);
    }

}
