/**
 * Copyright (C) 2024 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */

package knowledgeModule.gov.nyc.cir.ice

import java.util.List
import java.util.Set
import java.util.Date
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseRule
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICEFactTypeFinding
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.RecommendationStatus
import org.cdsframework.ice.service.Schedule
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine
import org.cdsframework.ice.supportingdatatmp.SupportedFactConcept
import org.cdsframework.ice.supportingdata.BaseDataRecommendationReason

expander ../../knowledgeCommon/org.cdsframework.ice/org.cdsframework^ICE^1.0.0.dsl

global java.util.Date evalTime
global org.cdsframework.ice.service.Schedule schedule


rule "COVID-19: Invoke separate agenda group for recommendations in the COVID19Dec2020 Season"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the vaccine group "VACCINE_GROUP_CONCEPT.850"
			- the series belongs to the season with name "COVID19Dec2020Season"
	then
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
		Set the Agenda Group Focus to "RecommendationForecast^customRecommendationRule^COVID19Dec2020Season"
end


rule "COVID-19: Invoke separate agenda group for post recommendation checks in the COVID19Dec2020 Season"
	dialect "mvel"
	agenda-group "RecommendationForecast^postCustomRecommendationCheck"
	when
		There is a Series $targetSeries
			- the Series belongs to the vaccine group "VACCINE_GROUP_CONCEPT.850"
			- the series belongs to the season with name "COVID19Dec2020Season"
			- a forecast for the Series has been made
			- post processing on the Series forecast has not already been run
	then
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
		Set the Agenda Group Focus to "RecommendationForecast^postCustomRecommendationCheck^COVID19Dec2020Season"
end


rule "COVID-19: Invoke separate agenda group for recommendations in the COVID19Sep2023 Season"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the vaccine group "VACCINE_GROUP_CONCEPT.850"
			- the series belongs to the season with name "COVID19Sep2023Season"
	then
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
		Set the Agenda Group Focus to "RecommendationForecast^customRecommendationRule^COVID19Sep2023Season"
end


rule "COVID-19: Invoke separate agenda group for post recommendation checks in the COVID19Sep2023 Season"
	dialect "mvel"
	agenda-group "RecommendationForecast^postCustomRecommendationCheck"
	when
		There is a Series $targetSeries
			- the Series belongs to the vaccine group "VACCINE_GROUP_CONCEPT.850"
			- the series belongs to the season with name "COVID19Sep2023Season"
			- a forecast for the Series has been made
			- post processing on the Series forecast has not already been run
	then
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
		Set the Agenda Group Focus to "RecommendationForecast^postCustomRecommendationCheck^COVID19Sep2023Season"
end


rule "COVID-19: If the recommendation is NOT_RECOMMENDED, the current season series is complete and there is not already a recommendation reason supplied, add evaluation reason COMPLETE"
	dialect "mvel"
	agenda-group "RecommendationForecast^postCustomRecommendationCheck"
	when
		There is a Series $targetSeries
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- a forecast for the Series has been made and a shot is not recommended
			- post processing on the Series forecast has not already been run
			- the Series is a Seasonal Series
		Verify that the count of recommendations in Series $targetSeries with recommendation status RecommendationStatus.NOT_RECOMMENDED and a populated reason is == 0
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.NOT_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end
