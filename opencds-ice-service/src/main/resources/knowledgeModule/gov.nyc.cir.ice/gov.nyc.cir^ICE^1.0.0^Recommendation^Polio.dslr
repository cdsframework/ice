/**
 * Copyright (C) 2024 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */
 
package knowledgeModule.gov.nyc.cir.ice

import java.util.List
import java.util.Set
import java.util.Date
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseRule
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.RecommendationStatus
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine

expander ../../knowledgeCommon/org.cdsframework.ice/org.cdsframework^ICE^1.0.0.dsl

global java.util.Date evalTime


rule "Polio: If a patient is >= 18 years old and has NOT completed the series, then the Recommendation is Conditional and the reason code is HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
    when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.400"
			- the Series is Not Complete
		The patient information $assign_oEvaluatedPerson must be known to complete writing this rule
			- make note of the patient's birthdate as $dtBirthDate
		Confirm elapsed time between $dtBirthDate and evalTime >= "18y"
    then
		Create a Recommendation as $recommendation with Status RecommendationStatus.CONDITIONALLY_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete		// to ensure that no other rules override this recommendation
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end


rule "Polio: If the execution date is before 8/7/2009, modify the Minimum Age of DoseRule 4 to 126 days & the Minimum Interval of DoseRule3 to 28 days"
	agenda-group "RecommendationForecast^customRecommendationRule"
	no-loop true
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.400"
			- the name of the Series is "Polio4DoseSeries"
			- Post Processing on the series forecast has not already been run
			- the Series is Not Complete
			- the Number of Doses Administered is == 3
		Confirm the date evalTime is before "07-Aug-2009"
	then
		Obtain the existing DoseRule for Dose Number 4 in the Series $targetSeries as $assign_oDoseRule4
		Set the Minimum Age for DoseRule $assign_oDoseRule4 to TimePeriod "126d"
		Replace the existing DoseRule in the Series $targetSeries with $assign_oDoseRule4
		Obtain the existing DoseRule for Dose Number 3 in the Series $targetSeries as $assign_oDoseRule3
		Set the Minimum Interval for DoseRule $assign_oDoseRule3 to TimePeriod "28d"
		Replace the existing DoseRule in the Series $targetSeries with $assign_oDoseRule3
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end


rule "Polio: If the execution date is before 8/7/2009 and the calculated Earliest Date for Dose 4 is after 8/7/2009, reset the Minimum Age & Minimum Interval back to their original values (4y & 6m, respectively) and recalculate"
	dialect "mvel"
	agenda-group "RecommendationForecast^postCustomRecommendationCheck"
	when
		There is a Series $targetSeries
			- post processing on the Series forecast has not already been run
			- a Forecast for the Series has been made and a Recommendation Date has been determined
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.400"
			- the name of the Series is "Polio4DoseSeries"
			- the effective dose number in the series is == 4
			- make note of the Earliest Date as $earliestDate
		Confirm the date evalTime is before "07-Aug-2009"
		Confirm the date $earliestDate is after "07-Aug-2009"
	then
		Clear forecasted recommendations from consideration in series $targetSeries
		Obtain the existing DoseRule for Dose Number 4 in the Series $targetSeries as $assign_oDoseRule4
		Set the Minimum Age for DoseRule $assign_oDoseRule4 to TimePeriod "4y"
		Replace the existing DoseRule in the Series $targetSeries with $assign_oDoseRule4
		Obtain the existing DoseRule for Dose Number 3 in the Series $targetSeries as $assign_oDoseRule3
		Set the Minimum Interval for DoseRule $assign_oDoseRule3 to TimePeriod "6m"
		Replace the existing DoseRule in the Series $targetSeries with $assign_oDoseRule3
		Refresh all Facts in the Series $targetSeries for Forecasting
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end

/*************************************************************************************************************************************************************************************
Series complete with 3 doses: If patient is >= 4 years old (or will be >= 4 years old at the dose 3 recommended due date), recommend target dose 3 (and final dose) at 4 years old; 
minimum interval = 6 months (for earliest date); recommended interval = 6 months.
*************************************************************************************************************************************************************************************/

rule "Polio: If patient >= 4 yrs (or will be >= 4 yrs for target dose 3 recommendation date), include recommendation at 4yrs of age; minimum & recommended interval of 6m from prior administered shot for target dose 3"
	dialect "mvel"
	agenda-group "RecommendationForecast^postCustomRecommendationCheck"
	no-loop true
	when
		There is a Series $targetSeries
			- the series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.400"
			- the name of the series is "Polio4DoseSeries"
			- post processing on the series forecast has not already been run
			- a forecast for the series has been made and a recommendation date has been determined
			- the series is not complete
			- the number of doses administered is == 2
			- make note of the recommendation date as $recommendationDate
			- make note of the last shot administered in the series as $lastShotAdministered
		There is an administered shot $shotAdministered
			- that is the same shot as $lastShotAdministered
			- the dose number in the series is == 2
			- make note of the date this shot was administered as $dtAdministrationDate
		The Patient information $patientInfo must be known to complete writing this rule
			- make note of the Patient's birthdate as $birthDate
		Confirm elapsed time between $birthDate and evalTime >= "4y" || elapsed time between $birthDate and $recommendationDate >= "4y"
	then
		Create a Recommendation as $rInterval for the Series $targetSeries
		Add "6m" to $dtAdministrationDate and make note of the newly calculated date as $dtCalculated
		Set the recommendation Earliest Forecast Date for $rInterval to $dtCalculated
		Set the recommendation Recommended Forecast Date for $rInterval to $dtCalculated
		Include the Recommendation $rInterval for Consideration in the final forecast of the Series	
		Create a Recommendation as $rAge for the Series $targetSeries
		Add "4y" to $birthDate and make note of the newly calculated date as $dtCalculatedAge
		Set the recommendation Recommended Forecast Date for $rAge to $dtCalculatedAge
		Include the Recommendation $rAge for Consideration in the final forecast of the Series
		Refresh all facts in the series $targetSeries for forecasting
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end

/*************************************************************************************************************************************************************************************
Series complete with 3 doses END
*************************************************************************************************************************************************************************************/
