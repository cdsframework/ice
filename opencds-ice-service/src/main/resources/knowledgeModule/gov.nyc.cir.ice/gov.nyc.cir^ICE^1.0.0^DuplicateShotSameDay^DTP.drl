/**
 * Copyright (C) 2024 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */
 
package knowledgeModule.gov.nyc.cir.ice

import java.util.Date
import java.util.Iterator
import java.util.List
import java.util.Set
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICEFactTypeFinding
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.RecommendationStatus
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.supportingdata.BaseDataEvaluationReason
import org.cdsframework.ice.supportingdatatmp.SupportedFactConcept
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine

global java.util.Date evalTime


///////////////////////////////////////////////////////////// DTP-Specific Duplicate Shot/Same Day Rules Start Here /////////////////////////////////////////////////////////////

// Duplicate Shots/Same Day Evaluation Order: If one of the shots is pertussis-containing and the other is not, evaluate the pertussis-containing shot first
rule "Duplicate Shots/Same Day DTP: If one of the shots is pertussis-containing and another is not pertussis-containing, evaluate the pertussis-containing shot first"
	dialect "mvel"
	agenda-group "HistoryEvaluation^duplicateShotSameDay"
	activation-group "duplicateShotEvaluationOrder"	
	auto-focus true
	when
		$td: TargetDose(hasBeenEvaluated == false, status == DoseStatus.PRIMARY_SHOT_DETERMINATION_IN_PROCESS, associatedTargetSeries.vaccineGroup == "VACCINE_GROUP_CONCEPT.200", 
			vaccineComponent.allDiseasesTargetedForImmunity not contains "SUPPORTED_DISEASE_CONCEPT.033.9")
		$tdother : TargetDose(this != $td, hasBeenEvaluated == false, status == DoseStatus.EVALUATION_NOT_STARTED, associatedTargetSeries == $td.associatedTargetSeries, administrationDate == $td.administrationDate, 
			vaccineComponent.allDiseasesTargetedForImmunity contains "SUPPORTED_DISEASE_CONCEPT.033.9", isDuplicateShotSameDayEvaluationOrderCompleted() == false || $td.isDuplicateShotSameDayEvaluationOrderCompleted() == false) 
	then
		String _RULENAME = kcontext.rule.name;
		modify($td) {
			setStatus(DoseStatus.EVALUATION_NOT_STARTED),
			setDuplicateShotSameDayEvaluationOrderCompleted(true);
		}
		modify($tdother) {
			setStatus(DoseStatus.PRIMARY_SHOT_DETERMINATION_IN_PROCESS),
			setDuplicateShotSameDayEvaluationOrderCompleted(true);
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $tdother + "will be evaluted before " + $td + " in TargetSeries " + $td.associatedTargetSeries);
end


rule "Duplicate Shot/Same Day Overview Abstract DTP Rule #4: Make note if all shots are an NOS CVX and one of them contains Pertussis and the other does not"
	dialect "mvel"
	agenda-group "HistoryEvaluation^duplicateShotSameDay"
	auto-focus true
	salience 10
	when
		$td: TargetDose(hasBeenEvaluated == true, status == DoseStatus.VALID, isDoseStatusOverridden() == false, vaccineComponent.isUnspecifiedFormulation() == true, 
			vaccineComponent.allDiseasesTargetedForImmunity contains "SUPPORTED_DISEASE_CONCEPT.033.9",	associatedTargetSeries.vaccineGroup == "VACCINE_GROUP_CONCEPT.200")
		$tdother : TargetDose(hasBeenEvaluated == true, this != $td, administrationDate == $td.administrationDate, status == DoseStatus.VALID, isDoseStatusOverridden() == false, associatedTargetSeries == $td.associatedTargetSeries, 
			vaccineComponent.isUnspecifiedFormulation() == true, vaccineComponent.allDiseasesTargetedForImmunity not contains "SUPPORTED_DISEASE_CONCEPT.033.9", 
			isDuplicateShotSameDayCheckCompleted() == false || $td.isDuplicateShotSameDayCheckCompleted() == false)
	then
		String _RULENAME = kcontext.rule.name;
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $td + " in TargetSeries VACCINE_GROUP_CONCEPT.200 (DTP)");
end


// Duplicate Shots/Same Day Overview Rule #4(DTP exception): If all shots are an NOS CVX, then evaluate the 1st CVX processed as Valid and evaluate the other CVXs processed as Invalid with a 
// reason code of DUPLICATE_SAME_DAY
rule "Duplicate Shots/Same Day Overview Rule #4-DTP-Pertussis (BOTH Primary Series Doses): If both shots are NOS and one of them contains Pertussis and the other does not, then evaluate shot with Pertussis as Valid and evaluate the other as Invalid with a reason code of DUPLICATE_SAME_DAY"
		extends "Duplicate Shot/Same Day Overview Abstract DTP Rule #4: Make note if all shots are an NOS CVX and one of them contains Pertussis and the other does not"
	dialect "mvel"
	agenda-group "HistoryEvaluation^duplicateShotSameDay"
	auto-focus true
	salience 10
	when
		TargetDose(this == $td, isPrimarySeriesShot() == true)
		TargetDose(this == $tdother, isPrimarySeriesShot() == true)
	then
		String _RULENAME = kcontext.rule.name;
		modify($tdother) {
			setDuplicateShotSameDayCheckCompleted(true),
			setStatus(DoseStatus.INVALID),
			addInvalidReason(BaseDataEvaluationReason._DUPLICATE_SAME_DAY_REASON.getCdsListItemName());
		}
		modify($td) {
			setDuplicateShotSameDayCheckCompleted(true);
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $tdother + " in TargetSeries " + $td.associatedTargetSeries);
end


// Duplicate Shots/Same Day Overview Rule #4(DTP exception): If all shots are an NOS CVX, then evaluate the 1st CVX processed as Valid and evaluate the other CVXs processed as Invalid with a 
// reason code of DUPLICATE_SAME_DAY
rule "Duplicate Shots/Same Day Overview Rule #4-DTP-Pertussis (NOT Both Primary Series Doses): If neither shot is in the primary series, both are NOS, and one of them contains Pertussis and the other does not, then evaluate shot with Pertussis as Valid and evaluate the other as Invalid with a reason code of DUPLICATE_SAME_DAY"
		extends "Duplicate Shot/Same Day Overview Abstract DTP Rule #4: Make note if all shots are an NOS CVX and one of them contains Pertussis and the other does not"
	dialect "mvel"
	agenda-group "HistoryEvaluation^duplicateShotSameDay"
	auto-focus true
	salience 10
	when
		TargetDose(this == $tdother, ((isPrimarySeriesShot() == true || isPrimarySeriesShot() == false) && $td.isPrimarySeriesShot() == false) || (isPrimarySeriesShot() == false && ($td.isPrimarySeriesShot() == true || $td.isPrimarySeriesShot() == false)))	
	then
		String _RULENAME = kcontext.rule.name;
		// Do nothing - allow both shots to remain Valid since there is a 0 day interval between tetanus/diphtheria antigens
		modify($tdother) {
			setDuplicateShotSameDayCheckCompleted(true);
		}
		modify($td) {
			setDuplicateShotSameDayCheckCompleted(true);
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $tdother + " in TargetSeries " + $td.associatedTargetSeries);
end

 
// If neither shot is an NOS CVX, neither shot is a combination, or both shots are a combination then:
rule "Duplicate Shot/Same Day Overview Abstract DTP Rule #5: Make note if neither shot is an NOS CVX, and neither shot is a combination or both shots are a combination"
	dialect "mvel"
	agenda-group "HistoryEvaluation^duplicateShotSameDay"
	activation-group "duplicateShotAbstractRule5"
	auto-focus true
	salience 10
	when
		$td: TargetDose(hasBeenEvaluated == true, status == DoseStatus.VALID, isDoseStatusOverridden() == false, associatedTargetSeries.vaccineGroup == "VACCINE_GROUP_CONCEPT.200", vaccineComponent.isUnspecifiedFormulation() == false, $tdIsCombination: administeredVaccine.isCombinationVaccine())
		$tdother : TargetDose(this != $td, hasBeenEvaluated == true, status == DoseStatus.VALID, isDoseStatusOverridden() == false, associatedTargetSeries == $td.associatedTargetSeries, administrationDate == $td.administrationDate, vaccineComponent.isUnspecifiedFormulation() == false, 
			$tdOtherIsCombination : administeredVaccine.isCombinationVaccine(), isDuplicateShotSameDayCheckCompleted() == false || $td.isDuplicateShotSameDayCheckCompleted() == false)
		eval($tdIsCombination == true && $tdOtherIsCombination == true || $tdIsCombination == false && $tdOtherIsCombination == false)
	then
		String _RULENAME = kcontext.rule.name;
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $td + " in TargetSeries VACCINE_GROUP_CONCEPT.200 (DTP)");
end


// Duplicate Shots/Same Day DTP Rule 5a: If one DTP shot is pertussis-containing vaccine another is not pertussis-containing, evaluate the non-pertussis containing vaccine as Invalid w/ DUPLICATE_SHOT_SAME_DAY"
rule "Duplicate Shots/Same Day DTP Rule 5a (BOTH Primary Series Doses): If one DTP shot is pertussis-containing vaccine and other is not pertussis-containing, evaluate the non-pertussis containing vaccine as Invalid w/ DUPLICATE_SHOT_SAME_DAY"
		extends "Duplicate Shot/Same Day Overview Abstract DTP Rule #5: Make note if neither shot is an NOS CVX, and neither shot is a combination or both shots are a combination"
	dialect "mvel"
	agenda-group "HistoryEvaluation^duplicateShotSameDay"
	auto-focus true
	salience 10
	when
		TargetDose(this == $td, isPrimarySeriesShot() == true)
		TargetDose(this == $tdother, isPrimarySeriesShot() == true)
		eval($td.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9") && ! $tdother.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9"))
	then
		String _RULENAME = kcontext.rule.name;
		modify($tdother) {
			setStatus(DoseStatus.INVALID),
			setDuplicateShotSameDayCheckCompleted(true),
			addInvalidReason(BaseDataEvaluationReason._DUPLICATE_SAME_DAY_REASON.getCdsListItemName());
		}
		modify($td) {
			setDuplicateShotSameDayCheckCompleted(true),
			setStatus(DoseStatus.VALID);
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $tdother + " in TargetSeries DTP vaccine group");
end


// Duplicate Shots/Same Day DTP Rule 5a(Not Primary Series Does): If one DTP shot is pertussis-containing vaccine another is not pertussis-containing, evaluate both as Valid since there is a 0 day interval between non-pertussis shots 
rule "Duplicate Shots/Same Day DTP Rule 5a (_NOT_ BOTH Primary Series Doses): If one DTP shot is pertussis-containing vaccine and other is not pertussis-containing, but neither are primary series doses, evaluate both as Valid" 
		extends "Duplicate Shot/Same Day Overview Abstract DTP Rule #5: Make note if neither shot is an NOS CVX, and neither shot is a combination or both shots are a combination"
	dialect "mvel"
	agenda-group "HistoryEvaluation^duplicateShotSameDay"
	auto-focus true
	salience 10
	when
		TargetDose(this == $tdother, ((isPrimarySeriesShot() == true || isPrimarySeriesShot() == false) && $td.isPrimarySeriesShot() == false) || (isPrimarySeriesShot() == false && ($td.isPrimarySeriesShot() == true || $td.isPrimarySeriesShot() == false)))
		eval($td.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9") && ! $tdother.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9"))
	then
		String _RULENAME = kcontext.rule.name;
		// Don't do anything; both remain Valid
		modify($tdother) {
			setDuplicateShotSameDayCheckCompleted(true);
		}
		modify($td) {
			setDuplicateShotSameDayCheckCompleted(true);
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $tdother + " in TargetSeries DTP vaccine group");
end


// Duplicate Shot/Same Day DTP Rule 5b: If neither shot contains pertussis or both shots contain pertussis, then evaluate the 1st shot processed as Valid and evaluate the 2nd  
// shot processed as Invalid with a reason code of DUPLICATE_SAME_DAY
rule "Duplicate Shot/Same Day DTP Rule 5b (BOTH Primary Series Doses): If neither shot contains pertussis or both shots contain pertussis, then evaluate the 1st shot processed as Valid and evaluate the 2nd shot processed as Invalid with a reason code of DUPLICATE_SAME_DAY"
		extends "Duplicate Shot/Same Day Overview Abstract DTP Rule #5: Make note if neither shot is an NOS CVX, and neither shot is a combination or both shots are a combination"
	dialect "java"
	agenda-group "HistoryEvaluation^duplicateShotSameDay"
	auto-focus true
	salience 10
	when
		TargetDose(this == $td, isPrimarySeriesShot() == true)
		TargetDose(this == $tdother, isPrimarySeriesShot() == true)
		eval(($td.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9") && 
			$tdother.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9")) || 
			(! $td.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9") &&
			! $tdother.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9")))
	then
		String _RULENAME = drools.getRule().getName();
		TargetDose tdToModifyInvalid = null;
		TargetDose tdToModifyValid = null;
		if ($td.getAdministeredShotNumberInSeries() > $tdother.getAdministeredShotNumberInSeries()) {
			tdToModifyInvalid = $td;
			tdToModifyValid = $tdother;
		}
		else {
			tdToModifyInvalid = $tdother;
			tdToModifyValid = $td;
		}
		modify(tdToModifyInvalid) {
			setStatus(DoseStatus.INVALID),
			setDuplicateShotSameDayCheckCompleted(true),
			addInvalidReason(BaseDataEvaluationReason._DUPLICATE_SAME_DAY_REASON.getCdsListItemName());
		}
		modify(tdToModifyValid) {
			setDuplicateShotSameDayCheckCompleted(true),
			setStatus(DoseStatus.VALID);
			/////// removeAllEvaluationReasonsFromAllReasonSets();
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, tdToModifyInvalid + " in TargetSeries DTP vaccine group");
end


// Duplicate Shot/Same Day DTP Rule 5b: If neither shot contains pertussis or both shots contain pertussis, then evaluate the 1st shot processed as Valid and evaluate the 2nd shot processed as Invalid with a reason code of DUPLICATE_SAME_DAY
rule "Duplicate Shot/Same Day DTP Rule 5b (_NOT_ BOTH Primary Series Doses): If neither shot contains pertussis or both shots contain pertussis, but neither are primary series doses, evaluate both as Valid"
		extends "Duplicate Shot/Same Day Overview Abstract DTP Rule #5: Make note if neither shot is an NOS CVX, and neither shot is a combination or both shots are a combination"
	dialect "java"
	agenda-group "HistoryEvaluation^duplicateShotSameDay"
	auto-focus true
	salience 10
	when
		TargetDose(this == $tdother, ((isPrimarySeriesShot() == true || isPrimarySeriesShot() == false) && $td.isPrimarySeriesShot() == false) || (isPrimarySeriesShot() == false && ($td.isPrimarySeriesShot() == true || $td.isPrimarySeriesShot() == false)))
		eval(($td.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9") && 
			$tdother.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9")) || 
			(! $td.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9") &&
			! $tdother.getVaccineComponent().getAllDiseasesTargetedForImmunity().contains("SUPPORTED_DISEASE_CONCEPT.033.9")))
	then
		String _RULENAME = drools.getRule().getName();
		// Don't do anything; both remain valid
		modify($tdother) {
			setDuplicateShotSameDayCheckCompleted(true);
		}
		modify($td) {
			setDuplicateShotSameDayCheckCompleted(true);
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $tdother + " in TargetSeries DTP vaccine group");
end
